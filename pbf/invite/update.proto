syntax = "proto3";

package invite;
option go_package = "./;invite";

// UpdateI is the input for updating invites. Properties may be modified
// independently. Note that for accepting the invite the invite code must be
// provided for verification.
//
//     {
//         "obj": [
//             {
//                 "metadata": {
//                     "invite.venturemark.co/code": "<code>",
//                     "invite.venturemark.co/id": "<id>",
//                     "venture.venturemark.co/id": "<id>"
//                 },
//                 "jsnpatch": [
//                     {
//                         "ope": "replace",
//                         "pat": "/obj/property/stat",
//                         "val": "accepted"
//                     }
//                 ]
//             }
//         ]
//     }
//
message UpdateI {
  UpdateI_API api = 1;
  repeated UpdateI_Obj obj = 2;
}

message UpdateI_API {}

message UpdateI_Obj {
  map<string, string> metadata = 1;
  repeated UpdateI_Obj_Jsnpatch jsnpatch = 2;
}

message UpdateI_Obj_Jsnpatch {
  string ope = 1;
  string pat = 2;
  optional string val = 3;
}

// UpdateO is the output for updating invites. The response will contain object
// metadata to indicate if the invite got in fact updated. The example below
// indicates that the invite got updated and that a role for e.g. venture
// membership got automatically created upon accepting the invite.
//
//     {
//         "obj": [
//             {
//                 "metadata": {
//                     "invite.venturemark.co/status": "updated",
//                     "role.venturemark.co/status": "created"
//                 }
//             }
//         ]
//     }
//
message UpdateO {
  UpdateO_API api = 1;
  repeated UpdateO_Obj obj = 2;
}

message UpdateO_API {}

message UpdateO_Obj {
  map<string, string> metadata = 1;
}
