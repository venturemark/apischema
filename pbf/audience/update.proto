syntax = "proto3";

package audience;
option go_package = ".;audience";

// UpdateI is the input for updating audiences.
//
//     {
//         "obj": [
//             {
//                 "metadata": {
//                     "audience.venturemark.co/id": "<id>",
//                     "venture.venturemark.co/id": "<id>"
//                 },
//                 "jsnpatch": [
//                     {
//                         "ope": "add",
//                         "pat": "/obj/property/user/-",
//                         "val": "xh3b4sd"
//                     },
//                     {
//                         "ope": "remove",
//                         "pat": "/obj/property/user/0",
//                         "val": "marcoelli"
//                     }
//                 ]
//             }
//         ]
//     }
//
message UpdateI {
  UpdateI_API api = 1;
  repeated UpdateI_Obj obj = 2;
}

message UpdateI_API {}

message UpdateI_Obj {
  map<string, string> metadata = 1;
  repeated UpdateI_Obj_Jsnpatch jsnpatch = 2;
}

message UpdateI_Obj_Jsnpatch {
  string ope = 1;
  string pat = 2;
  optional string val = 3;
}

// UpdateO is the output for updating audiences. The response will contain
// object metadata to indicate if the audience got in fact updated. The example
// below indicates that the audience got updated. That is, the list of users
// changed.
//
//     {
//         "obj": [
//             {
//                 "metadata": {
//                     "audience.venturemark.co/status": "updated"
//                 }
//             }
//         ]
//     }
//
message UpdateO {
  UpdateO_API api = 1;
  repeated UpdateO_Obj obj = 2;
}

message UpdateO_API {}

message UpdateO_Obj {
  map<string, string> metadata = 1;
}
