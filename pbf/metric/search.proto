syntax = "proto3";

package metric;
option go_package = ".;metric";

// SearchI is the input to search metrics. That is looking up datapoints
// associated with a timeline. Below is an example JSON representation showing a
// filter query meant to fetch all metric objects associated with the specified
// timeline.
//
//     {
//         "filter": {
//             "property": [
//                 {
//                     "timeline_id": "tml-kjw44"
//                 }
//             ]
//         }
//     }
//
message SearchI {
  message Filter {
    message Chunking {
      string pointer = 1;
      string perpage = 2;
    }
    message Property {
      string timeline_id = 1;
      string timestamp = 2;
    }

    Chunking chunking = 1;
    repeated string operator = 2;
    repeated Property property = 3;
  }

  Filter filter = 1;
}

message SearchO {
  message Filter {
    message Chunking {
      string pointer = 1;
      string perpage = 2;
    }

    Chunking chunking = 1;
  }
  message Result {
    repeated int64 datapoint = 1;
    string timeline_id = 2;
    string timestamp = 3;
  }

  Filter filter = 1;
  Result result = 2;
}
