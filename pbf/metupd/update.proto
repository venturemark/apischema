syntax = "proto3";

package metupd;
option go_package = ".;metupd";

// UpdateI is the input for updating metric updates. For more information about
// metric updates as a separate resource see create.proto. Data and text can be
// updated respectively. Both properties can be updated at the same time. At
// least one property must be provided.
//
//     {
//         "obj": {
//             "metadata": {
//                 "venturemark.co/timeline": "tml-kn433"
//                 "venturemark.co/unixtime": "1604959525"
//             }
//             "property": {
//                 "data": [
//                     {
//                         "space": "y"
//                         "value": [
//                             32,
//                             85
//                         ]
//                     }
//                 ],
//                 "text": "Lorem ipsum ..."
//             }
//         }
//     }
//
message UpdateI {
  UpdateI_API api = 1;
  UpdateI_Obj obj = 2;
}

message UpdateI_API {}

message UpdateI_Obj {
  map<string, string> metadata = 1;
  repeated UpdateI_Obj_Property property = 2;
}

message UpdateI_Obj_Property {
  repeated UpdateI_Obj_Property_Data data = 1;
  string text = 2;
}

message UpdateI_Obj_Property_Data {
  string space = 1;
  repeated int64 value = 2;
}

// UpdateO is the output for updating metric updates. The response will contain
// object metadata to indicate which parts of the metric update got in fact
// updated. The example below indicates that the metric and the update resource
// got updated. That is, the data and the text.
//
//     {
//         "obj": {
//             "metadata": {
//                 "metric.venturemark.co/status": "updated"
//                 "update.venturemark.co/status": "updated"
//             }
//     }
//
message UpdateO {
  map<string, string> metadata = 1;
}
